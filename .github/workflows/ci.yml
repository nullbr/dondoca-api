# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches:
      - "main"
      - "capistrano-deploy"
  # pull_request:
  #   branches:
  #     - "**"
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1.2"
          bundler-cache: true
      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Bundle install
        run: bundle install
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Seed the db
      - name: Seed database
        run: bin/rails db:seed environment=test
      # Add or replace test runners here
      - name: I18n Health
        run: bundle exec i18n-tasks health
      - name: Run specs
        run: bin/rake
      - name: Run Rails tests
        run: bundle exec rails test
      - name: Report to CodeClimate
        run: |
          ./cc-test-reporter after-build --exit-code 0

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1.2"
          bundler-cache: true
      - name: Bundle install
        run: bundle install
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
